DataSet:
- description: Asset data for oid
  externalId: ds_asset_oid
  metadata:
    consoleSource: '{"names": ["opcua"]}'
    rawTables: '[{"databaseName": "asset_oid_opcua", "tableName": "assets"}]'
    transformations: '[{"externalId": "tr_asset_oid_opcua_asset_hierarchy", "type":
      "Transformations"}]'
  name: asset:oid
- description: Time series data for oid extracted live from OPC-UA simulator and static
    examples from PI (OID data)
  externalId: ds_timeseries_oid
  metadata:
    consoleSource: '{"names": ["opcua", "pi - static OID test data"]}'
    rawTables: '[{"databaseName": "timeseries_oid_opcua", "tableName": "contextualization_good"},
      {"databaseName": "timeseries_oid_opcua", "tableName": "contextualization_bad"},
      {"databaseName": "timeseries_oid_opcua", "tableName": "contextualization_manual_input"}]'
  name: timeseries:oid
Database:
- name: timeseries_oid_opcua
ExtractionPipeline:
- createdBy: unknown
  dataSetId: 10875617807794485048
  description: Contextualization of time series and assets for  oid:opcua
  documentation: "# Time series and assets Contextualization\nThe Time series and\
    \ assets Contextualization runs as a process in CDF Functions. Process triggers\
    \ on new time series that not is connected to an asset. The process stages are\
    \ as follows:\n\n```\n  Read configuration and start process by:\n  1. Read RAW\
    \ table with manual mappings and extract all rows not contextualized\n  2. Apply\
    \ manual mappings from TS to Asset - this will overwrite any existing mapping\n\
    \  3. Read all time series not matched (or all if runAll is True)\n  4. Read all\
    \ assets\n  5. Run ML contextualization to match TS -> Assets\n  6. Update TS\
    \ with mapping\n  7. Write results matched (good) not matched (bad) to RAW\n \
    \ 8. Output in good/bad table can then be used in workflow to update manual mappings\n\
    ```\nDefault configuration is provided as part of the deployment, but can be overwritten\
    \ by configuration provided in configuration section below:\n```\n # if True,\
    \ run without writing any annotations to CDF\n debug: False\n # if True run contextualization\
    \ on all time series, if False only run on time series that not is linked to an\
    \ asset\n runAll: False\n # RAW DB used to store input and results for contextualization\n\
    \ rawdb: 'timeseries_oid_opcua'\n # RAW table used to store all manual input for\
    \ mapping that should be used in contextualization\n # This table could be populated\
    \ from earlier mappings that are approved or used for manual override\n rawTableManual:\
    \ 'contextualization_manual_input'\n # RAW table used to store all mapping that\
    \ was automatically approved as good\n rawTableGood: 'contextualization_good'\n\
    \ # RAW table used to store all mapping that NOT was automatically approved\n\
    \ rawTableBad: 'contextualization_bad'\n # Prefix used for all time series that\
    \ is used in contextualization\n timeSeriesPrefix: [pi_, opc-ua]\n # List of externalId\
    \ for root assets to be used for contextualization\n assetRootExtIds: [WMT:VAL]\n\
    \ # Number between 0 and 1, indication of strict the matching should be 1 = only\
    \ exact matches\n matchThreshold: 0.85\n\n```\n"
  externalId: ep_ctx_timeseries_oid_opcua_asset
  name: ctx:timeseries:oid:opcua:asset
  rawTables:
  - dbName: timeseries_oid_opcua
    tableName: contextualization_good
  - dbName: timeseries_oid_opcua
    tableName: contextualization_bad
  - dbName: timeseries_oid_opcua
    tableName: contextualization_manual_input
  source: opcua
- createdBy: unknown
  dataSetId: 10875617807794485048
  description: Time Series source extraction pipeline with configuration for OPC-UA
    reading data from and OPC-UA simulator
  documentation: "# OPC UA Test simulator extraction pipeline\n\n  OPC Unified Architecture\
    \ (OPC UA) is a machine-to-machine communication protocol developed by the OPC\
    \ Foundation. Cognite OPC-UA Extractor is an\n  open-source program designed to\
    \ copy the OPC-UA node-hierarchy to CDF, then stream data and events to time series\
    \ in CDF.\n\n  Extracted data can be configured by extractor to store data directly\
    \ as Assets, Time series and Events in CDF dataset.\n  Alternatively the data\
    \ can be stored in a RAW database and then processed by a CDF Function to contextualize\
    \ the data before storing in CDF dataset.\n\n  More on OPC-UA extractor: see <https://docs.cognite.com/cdf/integration/guides/extraction/opc_ua/>\n\
    \n## Simulator\n\n  Download and install [Prosys OPC UA Simulation Server](https://prosysopc.com/products/opc-ua-simulation-server/)\
    \ on a host where you want to run the simulation.\n  From the installed simulator\
    \ you will find the required configuration parameters, as:\n\n\n```\n  - endpoint_url,\
    \ ex: opc.tcp://DESKTOP-18JE0L8:53530/OPCUA/SimulationServer\n  - root_namespace_uri,\
    \ ex: http://www.prosysopc.com/OPCUA/SimulationNodes/\n  - root_node_id, ex: s=85/0:Simulation\n\
    ```\n### Extractor configuration on the simulator host\n\n\n  Extractor service\
    \ installation location example: C:\\Cognite\\OpcUaExtractor\\bin\\OpcuaExtractor.exe\n\
    \n\n    ```\n    Config file: ...\\config\\config.yml (only contains the credentials\
    \ as it should read the configuration in this extraction pipeline)\n    ```\n\n\
    \n  Configuration for connection to the OPC-UA server is maintained and stored\
    \ as part of this extraction pipeline.\n  The configuration file for the OPC-UA\
    \ Extractor should be placed on the host running the extractor with access to\
    \ the simulator.\n  The configuration file should be named `config.yml`  (default\
    \ name - other names can also be used) and contain the following parameters:\n\
    \n    ``` yaml\n      # Version of the config schema\n      version: 1\n\n   \
    \   type: remote\n      cognite:\n          # The project to connect to in the\
    \ API, uses the environment variable COGNITE_PROJECT.\n          project: pytest-project\
    \ <ex: my_project>\n          host: https://bluefield.cognitedata.com <ex: https://api.cognitedata.com>\n\
    \n          # If this is set to true, credentials can be left out, and the extractor\n\
    \          # will read data without pushing it to CDF.\n          # This is for\
    \ microsoft as IdP, to use a different provider,\n          # set implementation:\
    \ Basic, and use token-url instead of tenant.\n          # See the example config\
    \ for the full list of options.\n          idp-authentication:\n             \
    \ # Directory tenant\n              tenant: dummy-domain <ex:  1f4afa-asfd-3434-bb46-93123s423ds\
    \ >\n              # Application Id\n              client-id: dummy-123  <ex:\
    \ 1f4afa-asfd-3434-bb46-93123s423ds >\n              # Client secret\n       \
    \       secret: dummy-secret <ex: 1f4afa-asfd-3434-bb46-93123s423ds-asdasd-asdasd-asdasd\
    \ >\n              # List of resource scopes, ex:\n              # scopes:\n \
    \             #   - scopeA\n              #   - scopeB\n              scopes:\n\
    \                  - https://bluefield.cognitedata.com/.default <ex: https://api.cognitedata.com/.default>\n\
    \          extraction-pipeline:\n              # ExternalId of extraction pipeline\n\
    \              pipeline-id: ep_src_timeseries_oid_opcua\n\n    ```\n\n    All\
    \ parameters in the config file that are environment variables ex: `pytest-project`\
    \ that should be set on the host running the extractor.\n"
  externalId: ep_src_timeseries_oid_opcua
  name: src:timeseries:oid:opcua
  source: opcua
ExtractionPipelineConfig:
- config: "data:\n  debug: False\n  runAll: False\n  rawdb: 'timeseries_oid_opcua'\n\
    \  rawTableGood: 'contextualization_good'\n  rawTableBad: 'contextualization_bad'\n\
    \  rawTableManual: 'contextualization_manual_input'\n  timeSeriesPrefix: [pi_,\
    \ opc-ua]\n  timeSeriesDataSetExtId: 'ds_timeseries_oid'\n  assetRootExtIds: [WMT:VAL]\n\
    \  matchThreshold: 0.75\n"
  externalId: ep_ctx_timeseries_oid_opcua_asset
- config: "# Version of the config schema\nversion: 1\n\nsource:\n    # The URL of\
    \ the OPC-UA server to connect to\n    endpoint-url: 'opc.tcp://DESKTOP-18JE0L8:53530/OPCUA/SimulationServer'\n\
    \    force-restart: true\n    browse-nodes-chunk: 100\n    subscription-chunk:\
    \ 1000\n    keep-alive-interval: 50000\n    sampling-interval: 0\n    queue-length:\
    \ 10\n    browse-throttling:\n        max-node-parallelism: 1000\n    retries:\n\
    \        timeout: 0\n        max-tries: 10\n        max-delay: 20s\n        initial-delay:\
    \ 2s\n        retry-status-codes:\n            - 2150694912\n            - 2148007936\n\
    cognite:\n    # The project to connect to in the API, uses the environment variable\
    \ COGNITE_PROJECT.\n    project: ${CDF_PROJECT}\n    host: ${CDF_URL}\n\n    #\
    \ If this is set to true, credentials can be left out, and the extractor\n   \
    \ # will read data without pushing it to CDF.\n    debug: false\n    non-finite-replacement:\n\
    \    data-set-external-id: 'ds_timeseries_oid'\n    cdf-chunking:\n        data-point-time-series:\
    \ 500\n        data-points: 10000\n\nextraction:\n    # Global prefix for externalId\
    \ in destinations. Should be unique to prevent name conflicts.\n    id-prefix:\
    \ \"opc-ua:\"\n\n    # Source node in the OPC-UA server. Leave empty to use the\
    \ top level Objects node.\n    # If root-nodes is set, this is added to the list\
    \ of root nodes.\n    root-node:\n        # Full name of the namespace of the\
    \ root node.\n        namespace-uri: 'http://www.prosysopc.com/OPCUA/SimulationNodes/'\n\
    \        # Id of the root node, on the form \"i=123\" or \"s=stringid\" etc.\n\
    \        node-id: 's=85/0:Simulation'\n\n    # Time in minutes between each call\
    \ to browse the OPC-UA directory, then push new nodes to destinations.\n    #\
    \ Note that this is a heavy operation, so this number should not be set too low.\n\
    \    # Alternatively, use N[timeunit] where timeunit is w, d, h, m, s or ms.\n\
    \    auto-rebrowse-period: 1m\n    # Enable using audit events to discover new\
    \ nodes. If this is set to true, the client will expect AuditAddNodes/AuditAddReferences\n\
    \    # events on the server node. These will be used to add new nodes automatically,\
    \ by recursively browsing from each given ParentId.\n    enable-audit-discovery:\
    \ true\n\n    # Config for how OPC-UA data-types are mapped to destinations\n\
    \    data-types:\n        # Add full JSON node-ids to data pushed to Raw. TypeDefintionId,\
    \ ParentNodeId, NodeId and DataTypeId.\n        expand-node-ids: true\n      \
    \  allow-string-variables: true\n        auto-identify-types: true\n"
  externalId: ep_src_timeseries_oid_opcua
Function:
- cpu: 0.6
  description: Contextualization of timeseries and asset data for oid:opcua
  envVars:
    CDF_ENV: dev
    ENV_TYPE: dev
  externalId: fn_context_timeseries_oid_opcua_asset
  fileId: -1
  functionPath: ./handler.py
  metadata:
    cognite-toolkit-hash: /=751c0304;__init__.py=e3b0c442;config.py=ffce348e;constants.py=e9168055;get_resources.py=f6d32a5f;handler.py=3e480382;pipeline.py=16d2615e;requirements.txt=c35ab502;write_resources.py=11ee0a81
    version: 0.0.1
  name: context:timeseries:oid:opcua:asset
  owner: Anonymous
  runtime: py311
FunctionSchedule:
- cronExpression: 0,30 * * * *
  data:
    ExtractionPipelineExtId: ep_ctx_timeseries_oid_opcua_asset
  description: 'Run every 30 minute cdf-auth: def5e2e0'
  functionExternalId: fn_context_timeseries_oid_opcua_asset
  name: daily-every-30-min
Group:
- capabilities:
  - rawAcl:
      actions:
      - READ
      - WRITE
      scope:
        tableScope:
          dbsToTables:
            timeseries_oid_opcua:
              tables: []
  - timeSeriesAcl:
      actions:
      - READ
      - WRITE
      scope:
        datasetScope:
          ids:
          - 10875617807794485048
  - datasetsAcl:
      actions:
      - READ
      scope:
        idScope:
          ids:
          - 10875617807794485048
  - extractionConfigsAcl:
      actions:
      - READ
      scope:
        extractionPipelineScope:
          ids:
          - 15360909663466695708
  - extractionRunsAcl:
      actions:
      - READ
      - WRITE
      scope:
        datasetScope:
          ids:
          - 10875617807794485048
  metadata:
    origin: cdf-project-templates
  name: gp_timeseries_oid_extractor
  sourceId: <change_me>
- capabilities:
  - rawAcl:
      actions:
      - READ
      - WRITE
      scope:
        tableScope:
          dbsToTables:
            timeseries_oid_opcua:
              tables: []
  - sessionsAcl:
      actions:
      - LIST
      - CREATE
      - DELETE
      scope:
        all: {}
  - assetsAcl:
      actions:
      - READ
      - WRITE
      scope:
        datasetScope:
          ids:
          - 5942118280324318086
  - timeSeriesAcl:
      actions:
      - READ
      - WRITE
      scope:
        datasetScope:
          ids:
          - 10875617807794485048
  - extractionConfigsAcl:
      actions:
      - READ
      - WRITE
      scope:
        datasetScope:
          ids:
          - 10875617807794485048
  - extractionRunsAcl:
      actions:
      - READ
      - WRITE
      scope:
        datasetScope:
          ids:
          - 10875617807794485048
  - entitymatchingAcl:
      actions:
      - READ
      - WRITE
      scope:
        all: {}
  - labelsAcl:
      actions:
      - READ
      - WRITE
      scope:
        all: {}
  - functionsAcl:
      actions:
      - READ
      - WRITE
      scope:
        all: {}
  - transformationsAcl:
      actions:
      - READ
      - WRITE
      scope:
        datasetScope:
          ids:
          - 10875617807794485048
  metadata:
    origin: cdf-project-templates
  name: gp_timeseries_oid_processing
  sourceId: <change_me>
- capabilities:
  - annotationsAcl:
      actions:
      - READ
      - REVIEW
      scope:
        all: {}
  - labelsAcl:
      actions:
      - READ
      scope:
        all: {}
  - timeSeriesAcl:
      actions:
      - READ
      scope:
        datasetScope:
          ids:
          - 10875617807794485048
  metadata:
    origin: cdf-project-templates
  name: gp_timeseries_oid_read
  sourceId: <change_me>
Row:
- args: []
  dataframe:
    empty_count: 2
    first_row:
      assetExternalId: WMT:23-TT-92604A
      contextualized: ''
      timeSeriesExternalId: pi_191092
    index_name: key
    last_row:
      assetExternalId: WMT:23-TIC-92504
      contextualized: ''
      timeSeriesExternalId: pi_160781
    nan_count: 0
    null_count: 0
    shape: 2x3
  kwargs:
    db_name: timeseries_oid_opcua
    ensure_parent: false
    table_name: contextualization_manual_input
  name: timeseries_oid_opcua_contextualization_manual_input_False
Table:
- createdTime: 1
  name: contextualization_bad
- createdTime: 1
  name: contextualization_good
- createdTime: 1
  name: contextualization_manual_input
deleted: {}
